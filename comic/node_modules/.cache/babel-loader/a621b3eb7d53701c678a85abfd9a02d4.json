{"ast":null,"code":"var _jsxFileName = \"/Users/zzy/Desktop/hw2/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport KeywordButton from './KeywordButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of keywords,\n    // and a list of movies for a specified keyword.\n\n    this.state = {\n      keywords: [],\n      movies: []\n    };\n    this.showMovies = this.showMovies.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/keywords\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(keywordsList => {\n      if (!keywordsList) return; // Map each keyword in this.state.keywords to an HTML element:\n      // A button which triggers the showMovies function for each keyword.\n\n      const keywordsDivs = keywordsList.map((keywordObj, i) => React.createElement(KeywordButton, {\n        id: \"button-\" + keywordObj.kwd_name,\n        onClick: () => this.showMovies(keywordObj.kwd_name),\n        keyword: keywordObj.kwd_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })); // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        keywords: keywordsDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(keyword) {\n    console.log(\"showmovies\");\n    fetch(\"http://localhost:8081/keywords/\" + keyword, {\n      method: \"GET\"\n    }).then(res => {\n      return res.json();\n    }, err => {\n      console.log(err);\n    }).then(movieList => {\n      if (!movieList) return;\n      const movieLst = movieList.map((movieObj, i) => React.createElement(DashboardMovieRow, {\n        key: i,\n        title: movieObj.title,\n        rating: movieObj.rating,\n        num_ratings: movieObj.num_ratings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n      this.setState({\n        movies: movieLst\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Keywords\"), React.createElement(\"div\", {\n      className: \"keywords-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.keywords)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movies-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movies-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Title\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Rating\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Vote Count\"))), React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.movies)))));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/zzy/Desktop/hw2/client/src/components/Dashboard.js"],"names":["React","PageNavbar","KeywordButton","DashboardMovieRow","Dashboard","Component","constructor","props","state","keywords","movies","showMovies","bind","componentDidMount","fetch","method","then","res","json","err","console","log","keywordsList","keywordsDivs","map","keywordObj","i","kwd_name","setState","keyword","movieList","movieLst","movieObj","title","rating","num_ratings","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport KeywordButton from './KeywordButton';\nimport DashboardMovieRow from './DashboardMovieRow';\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of keywords,\n    // and a list of movies for a specified keyword.\n    this.state = {\n      keywords: [],\n      movies: []\n    };\n\n    this.showMovies = this.showMovies.bind(this);\n  };\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/keywords\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(keywordsList => {\n      if (!keywordsList) return;\n\n      // Map each keyword in this.state.keywords to an HTML element:\n      // A button which triggers the showMovies function for each keyword.\n      const keywordsDivs = keywordsList.map((keywordObj, i) =>\n        <KeywordButton \n          id={\"button-\" + keywordObj.kwd_name} \n          onClick={() => this.showMovies(keywordObj.kwd_name)} \n          keyword={keywordObj.kwd_name} \n        /> \n      );\n\n      // Set the state of the keywords list to the value returned by the HTTP response from the server.\n      this.setState({\n        keywords: keywordsDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  };\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(keyword) {\n    console.log(\"showmovies\")\n    fetch(\"http://localhost:8081/keywords/\" + keyword,\n    {\n      method: \"GET\"\n    })\n    .then(res => {\n      return res.json();\n    }, err => {\n      console.log(err);\n    })\n    .then(movieList => {\n      if (!movieList) return;\n      const movieLst = movieList.map((movieObj, i) =>\n      <DashboardMovieRow\n        key={i}\n        title={movieObj.title}\n        rating={movieObj.rating}\n        num_ratings={movieObj.num_ratings}\n      />\n    );\n\n      this.setState({\n        movies: movieLst\n      });\n    }, err => {\n      console.log(err);\n    });\n  };\n\n  render() {    \n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n\n        <br />\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Keywords</div>\n            <div className=\"keywords-container\">\n              {this.state.keywords}\n            </div>\n          </div>\n\n          <br />\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header-lg\"><strong>Title</strong></div>\n                <div className=\"header\"><strong>Rating</strong></div>\n                <div className=\"header\"><strong>Vote Count</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.movies}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n};\n"]},"metadata":{},"sourceType":"module"}